
build/kernel8.elf:     file format elf64-littleaarch64
build/kernel8.elf
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000080000

Program Header:
    LOAD off    0x0000000000010000 vaddr 0x0000000000080000 paddr 0x0000000000080000 align 2**16
         filesz 0x0000000000001768 memsz 0x0000000000001768 flags r-x
    LOAD off    0x0000000000012000 vaddr 0x0000000000082000 paddr 0x0000000000082000 align 2**16
         filesz 0x0000000000000428 memsz 0x0000000000000428 flags rw-
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
private flags = 0x0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         000014a0  0000000000080000  0000000000080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .eh_frame     000002c8  00000000000814a0  00000000000814a0  000114a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000400  0000000000082000  0000000000082000  00012000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  3 .got          00000010  0000000000082400  0000000000082400  00012400  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  4 .got.plt      00000018  0000000000082410  0000000000082410  00012410  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  5 .comment      0000002b  0000000000000000  0000000000000000  00012428  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000080000 l    d  .text	0000000000000000 .text
00000000000814a0 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000082000 l    d  .data	0000000000000000 .data
0000000000082400 l    d  .got	0000000000000000 .got
0000000000082410 l    d  .got.plt	0000000000000000 .got.plt
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 start.o
0000000000080000 l       .text	0000000000000000 .section
000000000008001c l       .text	0000000000000000 move_bootloader_setting
0000000000080010 l       .text	0000000000000000 memzero
0000000000080070 l       .text	0000000000000000 set_stackpointer_and_jump
0000000000080030 l       .text	0000000000000000 move_bootloader
0000000000080044 l       .text	0000000000000000 clear_bootloader_setting
0000000000080060 l       .text	0000000000000000 clear_bootloader
0000000000000000 l    df *ABS*	0000000000000000 main.c
0000000000000000 l    df *ABS*	0000000000000000 mbox.c
0000000000000000 l    df *ABS*	0000000000000000 reboot.c
0000000000000000 l    df *ABS*	0000000000000000 uart.c
0000000000000000 l    df *ABS*	0000000000000000 utils.c
0000000000000000 l    df *ABS*	0000000000000000 
0000000000082400 l     O .got	0000000000000000 _GLOBAL_OFFSET_TABLE_
000000000008055c g     F .text	0000000000000034 cancel_reset
0000000000080bc8 g     F .text	00000000000000bc reverse
00000000000806d8 g     F .text	0000000000000040 uart_send
0000000000080514 g     F .text	0000000000000048 reset
0000000000081478 g     F .text	0000000000000028 print_welcome
0000000000080350 g     F .text	0000000000000098 mailbox_call
00000000000813fc g     F .text	000000000000007c shell
000000000008100c g     F .text	000000000000006c checkcat
0000000000082370 g     O .data	0000000000000090 mailbox
0000000000081078 g     F .text	0000000000000384 cat
0000000000080a08 g     F .text	0000000000000100 itoa
0000000000080768 g     F .text	000000000000005c uart_puts
0000000000083400 g       .data	0000000000000000 __stack_top
0000000000080b08 g     F .text	00000000000000c0 ftoa
0000000000080590 g     F .text	0000000000000148 uart_init
00000000000807c4 g     F .text	000000000000008c uart_hex
0000000000080000 g       .text	0000000000000000 _start
0000000000082400 g       .data	0000000000000000 bss_end
0000000000080850 g     F .text	000000000000004c pow
00000000000803e8 g     F .text	000000000000007c get_board_revision
0000000000080718 g     F .text	0000000000000050 uart_getc
00000000000800c8 g     F .text	0000000000000288 main
000000000008089c g     F .text	0000000000000084 strcmp
0000000000080464 g     F .text	0000000000000088 get_arm_mem
0000000000080c84 g     F .text	0000000000000388 ls
0000000000082370 g       .data	0000000000000000 bss_begin
0000000000080920 g     F .text	0000000000000044 strlen
00000000000804ec g     F .text	0000000000000028 set
0000000000080964 g     F .text	00000000000000a4 substr


