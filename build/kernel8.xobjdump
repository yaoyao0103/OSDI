
build/kernel8.elf:     file format elf64-littleaarch64
build/kernel8.elf
architecture: aarch64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000080000

Program Header:
    LOAD off    0x0000000000010000 vaddr 0x0000000000080000 paddr 0x0000000000080000 align 2**16
         filesz 0x0000000000000e1c memsz 0x0000000000000eb0 flags rwx
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
private flags = 0x0:

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000098c  0000000000080000  0000000000080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000296  0000000000080990  0000000000080990  00010990  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .eh_frame     000001f4  0000000000080c28  0000000000080c28  00010c28  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000090  0000000000080e20  0000000000080e20  00010e1c  2**4
                  ALLOC
  4 .comment      0000002b  0000000000000000  0000000000000000  00010e1c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000080000 l    d  .text	0000000000000000 .text
0000000000080990 l    d  .rodata	0000000000000000 .rodata
0000000000080c28 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000080e20 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    df *ABS*	0000000000000000 start.o
0000000000080000 l       .text	0000000000000000 .section
0000000000080010 l       .text	0000000000000000 memzero
0000000000000000 l    df *ABS*	0000000000000000 main.c
0000000000000000 l    df *ABS*	0000000000000000 math.c
0000000000000000 l    df *ABS*	0000000000000000 mbox.c
0000000000000000 l    df *ABS*	0000000000000000 reboot.c
0000000000000000 l    df *ABS*	0000000000000000 string.c
0000000000000000 l    df *ABS*	0000000000000000 uart.c
00000000000803e0 g     F .text	0000000000000034 cancel_reset
000000000008069c g     F .text	00000000000000bc reverse
00000000000808a0 g     F .text	0000000000000040 uart_send
0000000000080e20 g     O .bss	0000000000000090 mbox
0000000000080398 g     F .text	0000000000000048 reset
0000000000080258 g     F .text	0000000000000028 print_welcome
0000000000080048 g     F .text	000000000000007c shell
00000000000804dc g     F .text	0000000000000100 itoa
00000000000802cc g     F .text	00000000000000a4 mbox_call
0000000000080930 g     F .text	000000000000005c uart_puts
0000000000081eb0 g       .bss	0000000000000000 __stack_top
00000000000805dc g     F .text	00000000000000c0 ftoa
0000000000080758 g     F .text	0000000000000148 uart_init
0000000000080000 g       .text	0000000000000000 _start
0000000000080eb0 g       .bss	0000000000000000 bss_end
0000000000080280 g     F .text	000000000000004c pow
00000000000808e0 g     F .text	0000000000000050 uart_getc
00000000000800c4 g     F .text	0000000000000194 main
0000000000080414 g     F .text	0000000000000084 strcmp
0000000000080e20 g       .bss	0000000000000000 bss_begin
0000000000080498 g     F .text	0000000000000044 strlen
0000000000080370 g     F .text	0000000000000028 set


